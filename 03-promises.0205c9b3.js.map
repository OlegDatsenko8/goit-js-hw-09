{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,SAAUF,SAASC,cAAc,uBACjCE,QAASH,SAASC,cAAc,sBAChCG,UAAWJ,SAASC,cAAc,wBAClCI,UAAWL,SAASC,cAAc,WAGpC,SAASK,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKbV,EAAKC,QAAQgB,iBAAiB,UAAUC,IACtCA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOrB,EAAKI,SAASkB,OAC7BC,EAAOF,OAAOrB,EAAKK,QAAQiB,OAC3BE,EAASH,OAAOrB,EAAKM,UAAUgB,OAEnC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAciB,EAAGL,GACdM,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBpB,QAAiBC,MAAU,IAGnDoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBtB,QAAeC,MAAU,IAGhDsB,SAAQ,KACPhC,EAAKC,QAAQgC,OAAO,IAExBb,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formRef: document.querySelector('.form'),\n  delayRef: document.querySelector('input[name=\"delay\"]'),\n  stepRef: document.querySelector('input[name=\"step\"]'),\n  amountRef: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nrefs.formRef.addEventListener('submit', event => {\n  event.preventDefault();\n\n  let delay = Number(refs.delayRef.value);\n  let step = Number(refs.stepRef.value);\n  let amount = Number(refs.amountRef.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n      .finally(() => {\n        refs.formRef.reset();\n      });\n    delay += step;\n  }\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","formRef","document","querySelector","delayRef","stepRef","amountRef","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","finally","reset"],"version":3,"file":"03-promises.0205c9b3.js.map"}